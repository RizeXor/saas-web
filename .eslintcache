[{"C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\index.tsx":"1","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\App.tsx":"3","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\pages\\Login.tsx":"4","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\components\\ui\\Navbar.tsx":"5","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\components\\ui\\NavbarLink.tsx":"6","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\pages\\Home.tsx":"7","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\components\\Subscription.tsx":"8","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\routes.ts":"9","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\components\\ui\\NavbarModal.tsx":"10","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\api\\subscriptions.ts":"11","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\api\\me.ts":"12","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\api\\logout.ts":"13","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\context\\user.ts":"14","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\api\\login.ts":"15","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\pages\\Shop.tsx":"16","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\api\\products.ts":"17","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\components\\Product.tsx":"18","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\api\\buy.ts":"19","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\components\\Price.tsx":"20"},{"size":749,"mtime":1609342918023,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1609342918065,"results":"23","hashOfConfig":"22"},{"size":1863,"mtime":1609344606559,"results":"24","hashOfConfig":"22"},{"size":2857,"mtime":1609342918052,"results":"25","hashOfConfig":"22"},{"size":3776,"mtime":1609342917924,"results":"26","hashOfConfig":"22"},{"size":458,"mtime":1609342917940,"results":"27","hashOfConfig":"22"},{"size":1061,"mtime":1609386091172,"results":"28","hashOfConfig":"22"},{"size":1765,"mtime":1609385884681,"results":"29","hashOfConfig":"22"},{"size":254,"mtime":1609344210456,"results":"30","hashOfConfig":"22"},{"size":1992,"mtime":1609342917960,"results":"31","hashOfConfig":"22"},{"size":588,"mtime":1609342917826,"results":"32","hashOfConfig":"22"},{"size":508,"mtime":1609342917817,"results":"33","hashOfConfig":"22"},{"size":424,"mtime":1609342917807,"results":"34","hashOfConfig":"22"},{"size":304,"mtime":1609342917966,"results":"35","hashOfConfig":"22"},{"size":393,"mtime":1609342917796,"results":"36","hashOfConfig":"22"},{"size":738,"mtime":1609390759758,"results":"37","hashOfConfig":"22"},{"size":424,"mtime":1609385635391,"results":"38","hashOfConfig":"22"},{"size":1205,"mtime":1609404785920,"results":"39","hashOfConfig":"22"},{"size":401,"mtime":1609404895420,"results":"40","hashOfConfig":"22"},{"size":1211,"mtime":1609404930311,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"7vjmkw",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\index.tsx",[],["90","91"],"C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\App.tsx",["92","93"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport LoginPage from \"./pages/Login\";\nimport HomePage from \"./pages/Home\";\nimport NavbarComponent from \"./components/ui/Navbar\";\nimport { UserContext } from \"./context/user\";\nimport { Me } from \"./types/me\";\nimport { useMe } from \"./api/me\";\nimport ShopPage from \"./pages/Shop\";\n\nconst App = () => {\n  const [user, setUser] = useState<Me>({\n    email: \"\",\n    first_name: \"\",\n    last_name: \"\",\n  });\n\n  const isLoggedIn = () => {\n    return user.email !== \"\";\n  };\n\n  const me = useMe();\n\n  useEffect(() => {\n    if (me.data?.email != null && !me.isLoading) {\n      console.log(me.data);\n      setUser(me.data);\n      console.log(user.email);\n    }\n  }, [me.isLoading]);\n\n  if (me.isLoading) {\n    return (\n      <div className=\"d-flex flex-column align-items-center w-100 container mt-3\">\n        <h1>ServerStack</h1>\n        <i className=\"fa fa-spinner fa-spin fa-lg fa-fw\"></i>\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    );\n  }\n\n  if (me.isError && me.error.response?.status !== 401) {\n    return (\n      <div className=\"d-flex flex-column align-items-center w-100 container mt-3\">\n        <h1>ServerStack</h1>\n        <span className=\"text-danger\">\n          {me.error.response == null ? \"Server offline\" : me.error.message}\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <Router>\n      <UserContext.Provider value={{ user, setUser, isLoggedIn }}>\n        <NavbarComponent />\n        {isLoggedIn() ? (\n          <Switch>\n            <Route component={HomePage} path=\"/\" exact />\n            <Route component={ShopPage} path=\"/shop\" exact />\n          </Switch>\n        ) : (\n          <LoginPage />\n        )}\n      </UserContext.Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\pages\\Login.tsx",[],"C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\components\\ui\\Navbar.tsx",["94"],"import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavbarLink from \"./NavbarLink\";\nimport { guestRoutes, loggedInRoutes } from \"../../routes\";\nimport NavbarModalComponent from \"./NavbarModal\";\nimport { postLogout } from \"../../api/logout\";\nimport { UserContext } from \"../../context/user\";\n\nconst NavbarComponent = () => {\n  const [isNavOpen, setNavOpen] = useState(false);\n  const { user, setUser, isLoggedIn } = useContext(UserContext);\n\n  const openModal = () => {\n    setNavOpen(true);\n  };\n\n  const closeModal = () => {\n    setNavOpen(false);\n  };\n\n  const logout = async () => {\n    await postLogout();\n    setUser({\n      email: \"\",\n      first_name: \"\",\n      last_name: \"\",\n    });\n  };\n\n  return (\n    <nav className=\"navbar navbar-dark bg-dark navbar-expand-md border-bottom border-primary\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        ServerStack\n      </Link>\n      <button\n        className=\"navbar-toggler border-none\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n        onClick={openModal}\n      >\n        <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto d-none d-md-flex\">\n          {isLoggedIn()\n            ? loggedInRoutes.map((route, key) => (\n                <NavbarLink\n                  key={key}\n                  to={route.to}\n                  label={route.label}\n                  activeOnlyWhenExact={true}\n                />\n              ))\n            : guestRoutes.map((route, key) => (\n                <NavbarLink\n                  key={key}\n                  to={route.to}\n                  label={route.label}\n                  activeOnlyWhenExact={true}\n                />\n              ))}\n        </ul>\n        {isLoggedIn() && (\n          <ul className=\"navbar-nav d-none d-md-flex\">\n            <li className=\"nav-item dropdown\">\n              <a\n                className=\"dropdown-toggle nav-item nav-link\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <i className=\"fa fa-user-circle fa-lg\" aria-hidden=\"true\"></i>{\" \"}\n              </a>\n              <div\n                className=\"dropdown-menu dropdown-menu-right\"\n                aria-labelledby=\"dropdownMenuButton\"\n              >\n                <div className=\"dropdown-item-text\">\n                  <div className=\"overflow-hidden d-flex flex-column\">\n                    <span>Logged in as</span>\n                    <small className=\"text-muted\">{`${user.first_name} ${user.last_name}`}</small>\n                  </div>\n                </div>\n                <div className=\"dropdown-divider\"></div>\n                <Link className=\"dropdown-item\" to=\"/settings\">\n                  <i className=\"fa fa-cog\" aria-hidden=\"true\"></i>\n                  {\" Settings\"}\n                </Link>\n                <div className=\"dropdown-divider\"></div>\n                <button\n                  className=\"dropdown-item\"\n                  type=\"button\"\n                  onClick={logout}\n                >\n                  <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\n                  {\" Logout\"}\n                </button>\n              </div>\n            </li>\n          </ul>\n        )}\n      </div>\n      <NavbarModalComponent isNavOpen={isNavOpen} closeModal={closeModal} />\n    </nav>\n  );\n};\n\nexport default NavbarComponent;\n","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\components\\ui\\NavbarLink.tsx",[],"C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\pages\\Home.tsx",[],"C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\components\\Subscription.tsx",[],"C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\routes.ts",[],"C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\components\\ui\\NavbarModal.tsx",["95"],"import React from \"react\";\nimport Modal from \"react-modal\";\nimport { guestRoutes, loggedInRoutes } from \"../../routes\";\nimport { NavLink } from \"react-router-dom\";\n\nModal.setAppElement(\"#root\");\n\ntype NavbarModalComponentProps = {\n  isNavOpen: boolean;\n  closeModal: any;\n};\n\nconst NavbarModalComponent: React.FC<NavbarModalComponentProps> = ({\n  closeModal,\n  isNavOpen,\n}) => {\n  return (\n    <Modal\n      isOpen={isNavOpen}\n      onRequestClose={closeModal}\n      contentLabel=\"Example Modal\"\n      style={{\n        overlay: {\n          position: \"fixed\",\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: \"rgba(0, 0, 0, 0.3)\",\n        },\n        content: {\n          position: \"absolute\",\n          top: \"0px\",\n          left: \"0px\",\n          right: \"0px\",\n          bottom: \"0px\",\n          backgroundColor: \"#0a0a0a\",\n          overflow: \"auto\",\n          borderRadius: \"0px\",\n          outline: \"none\",\n          border: \"none\",\n        },\n      }}\n    >\n      <div className=\"d-flex flex-column justify-content-center align-items-center\">\n        <h3 className=\"text-primary\">ServerStack</h3>\n        <hr className=\"w-50\" />\n        <ul className=\"navbar-modal-ul d-flex flex-column align-items-center\">\n          {loggedInRoutes.map((route, key) => (\n            <li key={key} className=\"my-1\">\n              <NavLink\n                to={route.to}\n                activeClassName=\"active\"\n                className=\"navbar-modal-link\"\n                onClick={closeModal}\n              >\n                {route.label}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n        <button\n          type=\"button\"\n          className=\"close text-white-50\"\n          aria-label=\"Close\"\n          onClick={() => {\n            closeModal();\n          }}\n        >\n          <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default NavbarModalComponent;\n","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\api\\subscriptions.ts",[],"C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\api\\me.ts",[],"C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\api\\logout.ts",["96"],"import axios, { AxiosError } from \"axios\";\n\nconst postLogout = async () => {\n  try {\n    await axios.post<null>(\"/api/v1/auth/logout/\", null, {\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"bid\")}`,\n      },\n    });\n    localStorage.removeItem(\"bid\");\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.data);\n    }\n    console.log(error);\n  }\n};\n\nexport { postLogout };\n","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\context\\user.ts",["97","98"],"import React, { useState } from \"react\";\nimport { Me, MeContext } from \"../types/me\";\n\nconst UserContext = React.createContext<MeContext>({\n  user: {\n    email: \"\",\n    first_name: \"\",\n    last_name: \"\",\n  },\n  setUser: () => {},\n  isLoggedIn: () => {\n    return false;\n  },\n});\n\nexport { UserContext };\n","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\api\\login.ts",["99"],"import axios from \"axios\";\nimport formik from \"formik\";\n\nconst postLogin = async (values: any) => {\n  try {\n    const { data } = await axios.post(\"/api/v1/auth/login/\", {\n      username: values.email,\n      password: values.password,\n    });\n    console.log(data);\n    localStorage.setItem(\"bid\", data.token);\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport { postLogin };\n","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\pages\\Shop.tsx",["100"],"import React from \"react\";\r\nimport { useProducts } from \"../api/products\";\r\nimport ProductComponent from \"../components/Product\";\r\n\r\nconst ShopPage = () => {\r\n  const products = useProducts();\r\n\r\n  const listProducts = products.data?.map((product) => {\r\n    if (product.active)\r\n      return <ProductComponent key={product.id} product={product} />;\r\n  });\r\n\r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <h3>Shop</h3>\r\n      <hr />\r\n      {products.isLoading ? (\r\n        <>\r\n          <i className=\"fa fa-spinner fa-spin fa-fw\"></i>\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </>\r\n      ) : (\r\n        <div className=\"row\">{listProducts}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopPage;\r\n","C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\api\\products.ts",[],"C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\components\\Product.tsx",["101"],"C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\api\\buy.ts",["102","103"],"C:\\Users\\rize\\Desktop\\dev\\company\\test-4\\client\\src\\components\\Price.tsx",["104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":38,"nodeType":"111","messageId":"112","endLine":1,"endColumn":48},{"ruleId":"113","severity":1,"message":"114","line":30,"column":6,"nodeType":"115","endLine":30,"endColumn":20,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":70,"column":15,"nodeType":"119","endLine":77,"endColumn":16},{"ruleId":"109","severity":1,"message":"120","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":21},{"ruleId":"109","severity":1,"message":"121","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":27},{"ruleId":"109","severity":1,"message":"122","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"123","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":12},{"ruleId":"109","severity":1,"message":"124","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"125","severity":1,"message":"126","line":8,"column":53,"nodeType":"127","messageId":"128","endLine":8,"endColumn":55},{"ruleId":"109","severity":1,"message":"129","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":13},{"ruleId":"109","severity":1,"message":"121","line":2,"column":17,"nodeType":"111","messageId":"112","endLine":2,"endColumn":27},{"ruleId":"109","severity":1,"message":"130","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":13},{"ruleId":"109","severity":1,"message":"131","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":21},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'me.data' and 'user.email'. Either include them or remove the dependency array.","ArrayExpression",["134"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'guestRoutes' is defined but never used.","'AxiosError' is defined but never used.","'useState' is defined but never used.","'Me' is defined but never used.","'formik' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'dayjs' is defined but never used.","'Buy' is defined but never used.","'useMutation' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},"Update the dependencies array to be: [me.data, me.isLoading, user.email]",{"range":"137","text":"138"},[795,809],"[me.data, me.isLoading, user.email]"]